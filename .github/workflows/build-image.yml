# This workflow will build and push a new container image to Amazon ECR

name: Build and save image to Amazon ECS

on:
  push:
    branches:
      - "master"
    paths:
      - server/**
  workflow_call:
    outputs:
      newImage:
        description: "New image"
        value: ${{jobs.build.outputs.outputImage}}

permissions:
  id-token: write
  contents: write # This is required for actions/checkout@v2

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    environment: production
    outputs:
      outputImage: ${{steps.build-image.outputs.newImage}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.ROLE_ARN }}
          role-session-name: ${{ vars.ROLE_SESSION }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: ${{ vars.REGISTRY_ALIAS }}
          REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG -f server/Dockerfile server 
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          echo "::set-output name=newImage::$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG"
